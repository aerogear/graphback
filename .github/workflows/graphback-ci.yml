name: GraphbackCI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.gitignore'
      - 'website/**'
      - '.vscode/**'
      - 'templates/**'
      - '.github/*.yml'
      - 'performance/**'
      - 'packages/**/*md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/build-website.yml'

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - master
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.vscode/**'
      - 'website/**'
      - '.gitignore'
      - 'templates/**'
      - '.github/*.yml'
      - 'performance/**'
      - 'packages/**/*md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/build-website.yml'

  release:
      types: [released, prereleased]

env:
  NODE_OPTIONS: --max_old_space_size=4096

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    services:
      mongodb:
        image: mongo:4.2.9
        env:
          MONGO_INITDB_DATABASE: users
          MONGO_INITDB_ROOT_USERNAME: mongodb
          MONGO_INITDB_ROOT_PASSWORD: mongo
        ports:
          - 27017:27017
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgresql
          POSTGRES_DB: users
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - name: Checkout master
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 12.x
    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@master
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: yarn
    - name: Build
      run: yarn build
    - name: Lint
      run: yarn lint
    - name: Unit Test
      run: yarn test
    - name: Integration Test
      run: yarn test:integration

  publishPackages:
    # publish to npm only when doing the release
    if: ${{ github.event_name == 'release' }}
    env:
      CI: true
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout master
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 12.x
    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@master
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}
    - name: Build
      run: yarn build
    - name: Publish
      run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_AUTH_TOKEN}}" > ~/.npmrc && TAG=${GITHUB_REF#"refs/tags/"} npm run release:publish
