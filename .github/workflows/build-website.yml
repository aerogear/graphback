name: Build Website

on:
  push:
    branches:
      - master
    paths:
      - 'docs/**'
      - 'website/**'
      - 'package.json'
      - 'packages/**/src/**'
      - '.github/workflows/build-website.yml'

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - master
    paths:
      - 'docs/**'
      - 'website/**'
      - 'package.json'
      - 'packages/**/src/**'
      - '.github/workflows/build-website.yml'

jobs:
  buildWebsite:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # Allow failure when website build fails. This won't block merging but the status will still be red allowing for investigations
    continue-on-error: true
    steps:
    - name: Checkout master
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 12.x
    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@master
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: yarn
    - name: Build API
      run: yarn build
    - name: Generate API Docs
      run: yarn generate:doc
    - name: Cache Website Dependencies
      id: cache-website-dependencies
      uses: actions/cache@master
      with:
        path: website/node_modules
        key: ${{ runner.os }}-website-${{ hashFiles('website/package.json') }}
    - name: Install Website Dependencies
      if: steps.cache-website-dependencies.outputs.cache-hit != 'true'
      run: cd website && yarn
    - name: Test Website Build
      # Test website build for pull request
      if:  ${{ github.event_name == 'pull_request' }}
      run: cd website && yarn build
    - name: Add key to allow access to repository
      # Prepare SSH credentials for website deploy when trigger is push.
      if:  ${{ github.event_name == 'push' }}
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        echo "${{ secrets.GH_PAGES_DEPLOY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        cat <<EOT >> ~/.ssh/config
        Host github.com
        HostName github.com
        IdentityFile ~/.ssh/id_rsa
        EOT
    - name: Release to GitHub Pages
      # Deploy website when the trigger is push.
      if: ${{ github.event_name == 'push' }}
      env:
        USE_SSH: true
        GIT_USER: git
      run: |
        git config --global user.email "actions@aerogear.com"
        git config --global user.name "gh-actions"
        cd website && yarn deploy
