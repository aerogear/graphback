/*! For license information please see ae2c1113.cbbefebb.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[867],{1333:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),p=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,f=b["".concat(i,".").concat(d)]||b[d]||s[d]||l;return n?a.a.createElement(f,o(o({ref:t},u),{},{components:n})):a.a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1334:function(e,t,n){"use strict";e.exports=n(1335)},1335:function(e,t,n){"use strict";var r=n(1336),a=60103,l=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,o=60110,c=60112;t.Suspense=60113;var u=60115,p=60116;if("function"==typeof Symbol&&Symbol.for){var b=Symbol.for;a=b("react.element"),l=b("react.portal"),t.Fragment=b("react.fragment"),t.StrictMode=b("react.strict_mode"),t.Profiler=b("react.profiler"),i=b("react.provider"),o=b("react.context"),c=b("react.forward_ref"),t.Suspense=b("react.suspense"),u=b("react.memo"),p=b("react.lazy")}var s="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}function O(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(d(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},O.prototype=g.prototype;var j=y.prototype=new O;j.constructor=y,r(j,g.prototype),j.isPureReactComponent=!0;var h={current:null},N=Object.prototype.hasOwnProperty,v={key:!0,ref:!0,__self:!0,__source:!0};function w(e,t,n){var r,l={},i=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)N.call(t,r)&&!v.hasOwnProperty(r)&&(l[r]=t[r]);var c=arguments.length-2;if(1===c)l.children=n;else if(1<c){for(var u=Array(c),p=0;p<c;p++)u[p]=arguments[p+2];l.children=u}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===l[r]&&(l[r]=c[r]);return{$$typeof:a,type:e,key:i,ref:o,props:l,_owner:h.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var q=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function I(e,t,n,r,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var c=!1;if(null===e)c=!0;else switch(o){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case a:case l:c=!0}}if(c)return i=i(c=e),e=""===r?"."+C(c,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(q,"$&/")+"/"),I(i,t,n,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||c&&c.key===i.key?"":(""+i.key).replace(q,"$&/")+"/")+e)),t.push(i)),1;if(c=0,r=""===r?".":r+":",Array.isArray(e))for(var u=0;u<e.length;u++){var p=r+C(o=e[u],u);c+=I(o,t,n,p,i)}else if("function"==typeof(p=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=s&&e[s]||e["@@iterator"])?e:null}(e)))for(e=p.call(e),u=0;!(o=e.next()).done;)c+=I(o=o.value,t,n,p=r+C(o,u++),i);else if("object"===o)throw t=""+e,Error(d(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return c}function k(e,t,n){if(null==e)return e;var r=[],a=0;return I(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function _(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var E={current:null};function P(){var e=E.current;if(null===e)throw Error(d(321));return e}var D={ReactCurrentDispatcher:E,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:h,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:k,forEach:function(e,t,n){k(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return k(e,(function(){t++})),t},toArray:function(e){return k(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(d(143));return e}},t.Component=g,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.cloneElement=function(e,t,n){if(null==e)throw Error(d(267,e));var l=r({},e.props),i=e.key,o=e.ref,c=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,c=h.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(p in t)N.call(t,p)&&!v.hasOwnProperty(p)&&(l[p]=void 0===t[p]&&void 0!==u?u[p]:t[p])}var p=arguments.length-2;if(1===p)l.children=n;else if(1<p){u=Array(p);for(var b=0;b<p;b++)u[b]=arguments[b+2];l.children=u}return{$$typeof:a,type:e.type,key:i,ref:o,props:l,_owner:c}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:o,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=w,t.createFactory=function(e){var t=w.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return P().useCallback(e,t)},t.useContext=function(e,t){return P().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return P().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return P().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return P().useLayoutEffect(e,t)},t.useMemo=function(e,t){return P().useMemo(e,t)},t.useReducer=function(e,t,n){return P().useReducer(e,t,n)},t.useRef=function(e){return P().useRef(e)},t.useState=function(e){return P().useState(e)},t.version="17.0.1"},1336:function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(a){return!1}}()?Object.assign:function(e,t){for(var n,o,c=i(e),u=1;u<arguments.length;u++){for(var p in n=Object(arguments[u]))a.call(n,p)&&(c[p]=n[p]);if(r){o=r(n);for(var b=0;b<o.length;b++)l.call(n,o[b])&&(c[o[b]]=n[o[b]])}}return c}},934:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),l=(n(1334),n(1333)),i=["components"],o={id:"queries",title:"Queries",sidebar_label:"Queries"},c={unversionedId:"crud/queries",id:"crud/queries",isDocsHomePage:!1,title:"Queries",description:"Graphback provides two query types for every model in the schema.",source:"@site/../docs/crud/queries.md",slug:"/crud/queries",permalink:"/docs/next/crud/queries",editUrl:"https://github.com/aerogear/graphback/edit/master/website/../docs/crud/queries.md",version:"current",sidebar_label:"Queries",sidebar:"docs",previous:{title:"CRUD Overview",permalink:"/docs/next/crud/overview"},next:{title:"Mutations",permalink:"/docs/next/crud/mutations"}},u=[{value:"Find",id:"find",children:[{value:"Filtering",id:"filtering",children:[]},{value:"Pagination",id:"pagination",children:[]},{value:"Ordering",id:"ordering",children:[]}]},{value:"Get",id:"get",children:[]}],p={rightToc:u};function b(e){var t=e.components,n=Object(a.a)(e,i);return Object(l.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Graphback provides two query types for every model in the schema."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#find"},Object(l.b)("inlineCode",{parentName:"a"},"find<Type>s")),": fetch all or a subset of items through optional filtering, pagination and sorting."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#get"},Object(l.b)("inlineCode",{parentName:"a"},"get<Type>")),": fetch a single item by its unique ID.")),Object(l.b)("h2",{id:"find"},"Find"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"find")," operation allows the client to fetch multiple items from the database, with optional filtering, pagination and ordering of the data allowing you to specify exactly the data you need. "),Object(l.b)("p",null,"The query follows the naming format ",Object(l.b)("inlineCode",{parentName:"p"},"find<Type>s"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  findNotes(filter: NoteFilter, page: PageRequest, orderBy: OrderByInput): NoteResultList!\n}\n")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Arguments:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"filter"),": filter object to query specific data."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"page"),": enables pagination of the data."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"orderBy"),": sorts the data in ascending or descending order.")),Object(l.b)("p",null,"The items fetched by ",Object(l.b)("inlineCode",{parentName:"p"},"findNote")," are returned in a container type ",Object(l.b)("inlineCode",{parentName:"p"},"NoteResultList")," created by Graphback:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"type NoteResultList {\n  # The notes are returned in the items field\n  items: [Note]!\n  # Offset specified in query\n  offset: Int\n  # Offset specified in query\n  limit: Int\n  # total count of notes in the database\n  count: Int\n}\n")),Object(l.b)("p",null,"Example of a simple query to retrieve all notes:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"query {\n  findNotes {\n    items {\n      id\n      title\n      likes\n    }\n  }\n}\n")),Object(l.b)("h3",{id:"filtering"},"Filtering"),Object(l.b)("p",null,"Graphback generates all the appropriate schema elements from ",Object(l.b)("a",{parentName:"p",href:"https://graphqlcrud.org"},"GraphQLCRUD")," and provides a mapping implementation for both PostgreSQL and MongoDB.\nThis lets you perform simple or complex querying of your data directly from GraphQL queries."),Object(l.b)("p",null,"Take an example ",Object(l.b)("inlineCode",{parentName:"p"},"Note")," model, which uses each of the built-in scalar types: ",Object(l.b)("inlineCode",{parentName:"p"},"ID"),", ",Object(l.b)("inlineCode",{parentName:"p"},"String"),", ",Object(l.b)("inlineCode",{parentName:"p"},"Boolean"),", ",Object(l.b)("inlineCode",{parentName:"p"},"Int"),", ",Object(l.b)("inlineCode",{parentName:"p"},"Float"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'""" @model """\ntype Note {\n  id: ID!\n  title: String!\n  opened: Boolean\n  likes: Int\n  completedPercentage: Float\n}\n')),Object(l.b)("p",null,"Graphback generates a filter input type for each model in the schema."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"input NoteFilter {\n  id: IDInput\n  title: StringInput\n  opened: BooleanInput\n  likes: IntInput\n  completedPercentage: FloatInput\n  and: [NoteFilter!]\n  or: [NoteFilter!]\n  not: NoteFilter\n}\n")),Object(l.b)("p",null,"So you can perform filtering of the data like this:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'query {\n  findNotes(filter: {\n    title: {\n      contains: "emails"\n    },\n    opened: {\n      eq: false\n    },\n    likes: {\n      gt: 10\n    },\n    completedPercentage: {\n      between: [20, 40]\n    },\n    and: {\n      title: {\n        startsWith: "read"\n      }\n    },\n    or: {\n      likes: {\n        eq: 100 \n      }\n    },\n    not: {\n      title: {\n        contains: "archived"\n      }\n    }\n  }) {\n    items {\n      id\n      title\n      likes\n    }\n  }\n}\n')),Object(l.b)("h4",{id:"operators"},"Operators"),Object(l.b)("p",null,"This is a list of all available filter operators."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Operator"),Object(l.b)("th",{parentName:"tr",align:null},"Meaning"),Object(l.b)("th",{parentName:"tr",align:null},"Scalars"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"eq"),Object(l.b)("td",{parentName:"tr",align:null},"Equal to"),Object(l.b)("td",{parentName:"tr",align:null},"All")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"ne"),Object(l.b)("td",{parentName:"tr",align:null},"Not equal to"),Object(l.b)("td",{parentName:"tr",align:null},"All")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"lt"),Object(l.b)("td",{parentName:"tr",align:null},"Less than"),Object(l.b)("td",{parentName:"tr",align:null},"All")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"le"),Object(l.b)("td",{parentName:"tr",align:null},"Less than or equal to"),Object(l.b)("td",{parentName:"tr",align:null},"All")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"gt"),Object(l.b)("td",{parentName:"tr",align:null},"Greater than"),Object(l.b)("td",{parentName:"tr",align:null},"All")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"gt"),Object(l.b)("td",{parentName:"tr",align:null},"Greater than or equal to"),Object(l.b)("td",{parentName:"tr",align:null},"All")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"between"),Object(l.b)("td",{parentName:"tr",align:null},"Between a range (of numbers)"),Object(l.b)("td",{parentName:"tr",align:null},"Int, Float")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"in"),Object(l.b)("td",{parentName:"tr",align:null},"In a list of items"),Object(l.b)("td",{parentName:"tr",align:null},"All")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"contains"),Object(l.b)("td",{parentName:"tr",align:null},"String contains"),Object(l.b)("td",{parentName:"tr",align:null},"String")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"startsWith"),Object(l.b)("td",{parentName:"tr",align:null},"String starts with"),Object(l.b)("td",{parentName:"tr",align:null},"String")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"endsWith"),Object(l.b)("td",{parentName:"tr",align:null},"String ends with"),Object(l.b)("td",{parentName:"tr",align:null},"String")))),Object(l.b)("p",null,"Each field in the ",Object(l.b)("inlineCode",{parentName:"p"},"NoteFilter")," input maps to a generated scalar input. This specifies the operators available for that scalar."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"input StringInput {\n  ne: String\n  eq: String\n  le: String\n  lt: String\n  ge: String\n  gt: String\n  in: [String!]\n  contains: String\n  startsWith: String\n  endsWith: String\n}\n\ninput IDInput {\n  ne: ID\n  eq: ID\n  le: ID\n  lt: ID\n  ge: ID\n  gt: ID\n  in: [ID!]\n}\n\ninput IntInput {\n  ne: Int\n  eq: Int\n  le: Int\n  lt: Int\n  ge: Int\n  gt: Int\n  in: [Int!]\n  between: [Int!]\n}\n\ninput FloatInput {\n  ne: Float\n  eq: Float\n  le: Float\n  lt: Float\n  ge: Float\n  gt: Float\n  in: [Float!]\n  between: [Float!]\n}\n\ninput BooleanInput {\n  ne: Boolean\n  eq: Boolean\n}\n")),Object(l.b)("p",null,"Graphback generates a filter input for the ",Object(l.b)("a",{parentName:"p",href:"/docs/next/model/scalars"},"Graphback scalars")," too. For convenience, a filter input for ",Object(l.b)("inlineCode",{parentName:"p"},"Date"),", ",Object(l.b)("inlineCode",{parentName:"p"},"DateTime"),", ",Object(l.b)("inlineCode",{parentName:"p"},"Time"),", ",Object(l.b)("inlineCode",{parentName:"p"},"Timestamp")," scalars is also generated; however we do not officially support these scalars and recommend you to use the Graphback scalars."),Object(l.b)("h3",{id:"pagination"},"Pagination"),Object(l.b)("p",null,"You can perform pagination with the ",Object(l.b)("inlineCode",{parentName:"p"},"page")," argument."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"type PageRequest {\n  limit: Int\n  offset: Int\n}\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"findNotes(page: {limit: 10, offset:4}) {\n  items {\n    id\n  }\n}\n")),Object(l.b)("h3",{id:"ordering"},"Ordering"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"input OrderByInput {\n  field: String!\n  order: SortDirectionEnum = ASC\n}\n\nenum SortDirectionEnum {\n  DESC\n  ASC\n}\n")),Object(l.b)("p",null,"To sort/order items by a certain field, use the ",Object(l.b)("inlineCode",{parentName:"p"},"orderBy")," argument."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'findNotes(orderBy: {order: DESC, field: "likes"}) {\n  items {\n    id\n  }\n}\n')),Object(l.b)("h2",{id:"get"},"Get"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"get")," operation allows the client to fetch a single item from the database by its unique ID."),Object(l.b)("p",null,"The query follows the naming format ",Object(l.b)("inlineCode",{parentName:"p"},"get<Type>"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  getNote(id: ID!): Note\n}\n")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Arguments:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"id"),": The unique ID of the object. This will always be ",Object(l.b)("inlineCode",{parentName:"li"},"id: ID"),". The resolver will automatically map this to your primary key field.")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'"""\n@model\n"""\ntype User {\n  """@id"""\n  email: String\n  name: String\n}\n')),Object(l.b)("p",null,"Example of a query to retrieve a single user by their primary field (email):"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'getNote(id: "tommyshelby@gmail.com") {\n  id\n  email\n  name\n}\n')))}b.isMDXComponent=!0}}]);