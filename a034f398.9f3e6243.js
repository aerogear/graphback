(window.webpackJsonp=window.webpackJsonp||[]).push([[786],{1333:function(e,t,r){"use strict";r.d(t,"a",(function(){return m})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=a.a.createContext({}),b=function(e){var t=a.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},m=function(e){var t=b(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=b(r),u=n,d=m["".concat(c,".").concat(u)]||m[u]||s[u]||o;return r?a.a.createElement(d,p(p({ref:t},i),{},{components:r})):a.a.createElement(d,p({ref:t},i))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,c[1]=p;for(var i=2;i<o;i++)c[i]=r[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},854:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return p})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return m}));var n=r(3),a=r(7),o=(r(0),r(1333)),c=["components"],p={id:"_plugin_getmodeltypesfromschema_",title:"plugin/getModelTypesFromSchema",sidebar_label:"plugin/getModelTypesFromSchema"},l={unversionedId:"api/graphback-core/modules/_plugin_getmodeltypesfromschema_",id:"version-0.15.x/api/graphback-core/modules/_plugin_getmodeltypesfromschema_",isDocsHomePage:!1,title:"plugin/getModelTypesFromSchema",description:"Index",source:"@site/versioned_docs/version-0.15.x/api/graphback-core/modules/_plugin_getmodeltypesfromschema_.md",slug:"/api/graphback-core/modules/_plugin_getmodeltypesfromschema_",permalink:"/docs/0.15.x/api/graphback-core/modules/_plugin_getmodeltypesfromschema_",editUrl:"https://github.com/aerogear/graphback/edit/master/website/versioned_docs/version-0.15.x/api/graphback-core/modules/_plugin_getmodeltypesfromschema_.md",version:"0.15.x",sidebar_label:"plugin/getModelTypesFromSchema"},i=[{value:"Index",id:"index",children:[{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"<code>Const</code> getModelTypesFromSchema",id:"const-getmodeltypesfromschema",children:[]}]}],b={rightToc:i};function m(e){var t=e.components,r=Object(a.a)(e,c);return Object(o.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"index"},"Index"),Object(o.b)("h3",{id:"functions"},"Functions"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/0.15.x/api/graphback-core/modules/_plugin_getmodeltypesfromschema_#const-getmodeltypesfromschema"},"getModelTypesFromSchema"))),Object(o.b)("h2",{id:"functions-1"},"Functions"),Object(o.b)("h3",{id:"const-getmodeltypesfromschema"},Object(o.b)("inlineCode",{parentName:"h3"},"Const")," getModelTypesFromSchema"),Object(o.b)("p",null,"\u25b8 ",Object(o.b)("strong",{parentName:"p"},"getModelTypesFromSchema"),"(",Object(o.b)("inlineCode",{parentName:"p"},"schema"),": GraphQLSchema): ",Object(o.b)("em",{parentName:"p"},"GraphQLObjectType[]")),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Defined in ",Object(o.b)("a",{parentName:"em",href:"https://github.com/aerogear/graphback/blob/b39280e7/packages/graphback-core/src/plugin/getModelTypesFromSchema.ts#L14"},"packages/graphback-core/src/plugin/getModelTypesFromSchema.ts:14"))),Object(o.b)("p",null,"Get all GraphQL types from schema without:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Query, Mutation, Subscription objects"),Object(o.b)("li",{parentName:"ul"},"Internal scalars added by parser")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"deprecated"))," Please use ",Object(o.b)("inlineCode",{parentName:"p"},"getUserTypes")," from @graphql-toolkit/common"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Parameters:")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Name"),Object(o.b)("th",{parentName:"tr",align:null},"Type"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"schema")),Object(o.b)("td",{parentName:"tr",align:null},"GraphQLSchema")))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Returns:")," ",Object(o.b)("em",{parentName:"p"},"GraphQLObjectType[]")))}m.isMDXComponent=!0}}]);