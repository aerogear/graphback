## NOTE: This schema was generated by Graphback and should not be changed manually

""" @model """
type Comment {
  id: ID!
  text: String
  description: String

  """@manyToOne field: 'comments', key: 'noteId'"""
  note: Note
}

input CommentData {
  id: ID
  text: String
  description: String
  noteId: ID
}

input CommentFilter {
  id: ID
  text: String
  description: String
  noteId: ID
}

type Mutation {
  createNote(data: NoteData!): Note!
  updateNote(data: NoteData!): Note!
  deleteNote(filter: NoteFilter!): Note!
  createComment(data: CommentData!): Comment!
  updateComment(data: CommentData!): Comment!
  deleteComment(filter: CommentFilter!): Comment!
}

""" @model """
type Note {
  id: ID!
  title: String!
  description: String

  """@oneToMany field: 'note', key: 'noteId'"""
  comments: [Comment]!
}

input NoteData {
  id: ID
  title: String!
  description: String
}

input NoteFilter {
  id: ID
  title: String
  description: String
}

type Query {
  findAllNotes(limit: Int, offset: Int): [Note]!
  findNotes(filter: NoteFilter, limit: Int, offset: Int): [Note]!
  findAllComments(limit: Int, offset: Int): [Comment]!
  findComments(filter: CommentFilter, limit: Int, offset: Int): [Comment]!
}

type Subscription {
  newNote(data: NoteData): Note!
  updatedNote(data: NoteData): Note!
  deletedNote(filter: NoteFilter): Note!
  newComment(data: CommentData): Comment!
  updatedComment(data: CommentData): Comment!
  deletedComment(filter: CommentFilter): Comment!
}
