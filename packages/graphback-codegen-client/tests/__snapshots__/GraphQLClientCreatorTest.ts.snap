// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test plugin engine gql 1`] = `
Object {
  "fragments": Array [
    Object {
      "implementation": "fragment NoteFields on Note {
   id
   title
   description

} ",
      "name": "Note",
    },
    Object {
      "implementation": "fragment NoteExpandedFields on Note {
   id
   title
   description
   comments {
      id
      title
      description
   }
} ",
      "name": "NoteExpanded",
    },
    Object {
      "implementation": "fragment CommentFields on Comment {
   id
   title
   description

} ",
      "name": "Comment",
    },
    Object {
      "implementation": "fragment CommentExpandedFields on Comment {
   id
   title
   description
   noteComment {
      id
      title
      description
   }
} ",
      "name": "CommentExpanded",
    },
  ],
  "mutations": Array [
    Object {
      "implementation": "mutation createNote($input: CreateNoteInput!) {
  createNote(input: $input) {
      ...NoteFields
  }
}
",
      "name": "createNote",
    },
    Object {
      "implementation": "mutation updateNote($input: MutateNoteInput!) {
  updateNote(input: $input) {
      ...NoteFields
  }
}
",
      "name": "updateNote",
    },
    Object {
      "implementation": "mutation deleteNote($input: MutateNoteInput!) {
  deleteNote(input: $input) {
      ...NoteFields
  }
}
",
      "name": "deleteNote",
    },
    Object {
      "implementation": "mutation createComment($input: CreateCommentInput!) {
  createComment(input: $input) {
      ...CommentFields
  }
}
",
      "name": "createComment",
    },
    Object {
      "implementation": "mutation updateComment($input: MutateCommentInput!) {
  updateComment(input: $input) {
      ...CommentFields
  }
}
",
      "name": "updateComment",
    },
    Object {
      "implementation": "mutation deleteComment($input: MutateCommentInput!) {
  deleteComment(input: $input) {
      ...CommentFields
  }
}
",
      "name": "deleteComment",
    },
  ],
  "queries": Array [
    Object {
      "implementation": "query findNotes($filter: NoteFilter, $page: PageRequest, $orderBy: OrderByInput) {
    findNotes(filter: $filter, page: $page, orderBy: $orderBy) {
      items {
        ...NoteExpandedFields
      }
      offset
      limit
    }
  }",
      "name": "findNotes",
    },
    Object {
      "implementation": "query getNote($id: ID!) {
    getNote(id: $id) {
      ...NoteExpandedFields
    }
  }",
      "name": "getNote",
    },
    Object {
      "implementation": "query findComments($filter: CommentFilter, $page: PageRequest, $orderBy: OrderByInput) {
    findComments(filter: $filter, page: $page, orderBy: $orderBy) {
      items {
        ...CommentExpandedFields
      }
      offset
      limit
    }
  }",
      "name": "findComments",
    },
    Object {
      "implementation": "query getComment($id: ID!) {
    getComment(id: $id) {
      ...CommentExpandedFields
    }
  }",
      "name": "getComment",
    },
  ],
  "subscriptions": Array [
    Object {
      "implementation": "subscription newNote($filter: NoteSubscriptionFilter) {
  newNote(filter: $filter) {
      ...NoteFields
  }
} ",
      "name": "newNote",
    },
    Object {
      "implementation": "subscription updatedNote($filter: NoteSubscriptionFilter) {
  updatedNote(filter: $filter) {
      ...NoteFields
  }
} ",
      "name": "updatedNote",
    },
    Object {
      "implementation": "subscription deletedNote($filter: NoteSubscriptionFilter) {
  deletedNote(filter: $filter) {
      ...NoteFields
  }
} ",
      "name": "deletedNote",
    },
    Object {
      "implementation": "subscription newComment($filter: CommentSubscriptionFilter) {
  newComment(filter: $filter) {
      ...CommentFields
  }
} ",
      "name": "newComment",
    },
    Object {
      "implementation": "subscription updatedComment($filter: CommentSubscriptionFilter) {
  updatedComment(filter: $filter) {
      ...CommentFields
  }
} ",
      "name": "updatedComment",
    },
    Object {
      "implementation": "subscription deletedComment($filter: CommentSubscriptionFilter) {
  deletedComment(filter: $filter) {
      ...CommentFields
  }
} ",
      "name": "deletedComment",
    },
  ],
}
`;

exports[`Test plugin engine ts 1`] = `
Object {
  "fragments": Array [
    Object {
      "implementation": "import gql from \\"graphql-tag\\"

export const NoteFragment = gql\`
  fragment NoteFields on Note {
   id
   title
   description

} 
\`
",
      "name": "Note",
    },
    Object {
      "implementation": "export const NoteExpandedFragment = gql\`
  fragment NoteExpandedFields on Note {
   id
   title
   description
   comments {
      id
      title
      description
   }
} 
\`
",
      "name": "NoteExpanded",
    },
    Object {
      "implementation": "

export const CommentFragment = gql\`
  fragment CommentFields on Comment {
   id
   title
   description

} 
\`
",
      "name": "Comment",
    },
    Object {
      "implementation": "export const CommentExpandedFragment = gql\`
  fragment CommentExpandedFields on Comment {
   id
   title
   description
   noteComment {
      id
      title
      description
   }
} 
\`
",
      "name": "CommentExpanded",
    },
  ],
  "mutations": Array [
    Object {
      "implementation": "export const createNote = gql\`
  mutation createNote($input: CreateNoteInput!) {
  createNote(input: $input) {
      ...NoteFields
  }
}


  \${NoteFragment}
\`
",
      "name": "createNote",
    },
    Object {
      "implementation": "export const updateNote = gql\`
  mutation updateNote($input: MutateNoteInput!) {
  updateNote(input: $input) {
      ...NoteFields
  }
}


  \${NoteFragment}
\`
",
      "name": "updateNote",
    },
    Object {
      "implementation": "export const deleteNote = gql\`
  mutation deleteNote($input: MutateNoteInput!) {
  deleteNote(input: $input) {
      ...NoteFields
  }
}


  \${NoteFragment}
\`
",
      "name": "deleteNote",
    },
    Object {
      "implementation": "export const createComment = gql\`
  mutation createComment($input: CreateCommentInput!) {
  createComment(input: $input) {
      ...CommentFields
  }
}


  \${CommentFragment}
\`
",
      "name": "createComment",
    },
    Object {
      "implementation": "export const updateComment = gql\`
  mutation updateComment($input: MutateCommentInput!) {
  updateComment(input: $input) {
      ...CommentFields
  }
}


  \${CommentFragment}
\`
",
      "name": "updateComment",
    },
    Object {
      "implementation": "export const deleteComment = gql\`
  mutation deleteComment($input: MutateCommentInput!) {
  deleteComment(input: $input) {
      ...CommentFields
  }
}


  \${CommentFragment}
\`
",
      "name": "deleteComment",
    },
  ],
  "queries": Array [
    Object {
      "implementation": "export const findNotes = gql\`
  query findNotes($filter: NoteFilter, $page: PageRequest, $orderBy: OrderByInput) {
    findNotes(filter: $filter, page: $page, orderBy: $orderBy) {
      items {
        ...NoteExpandedFields
      }
      offset
      limit
    }
  }

  \${NoteExpandedFragment}
\`
",
      "name": "findNotes",
    },
    Object {
      "implementation": "export const getNote = gql\`
  query getNote($id: ID!) {
    getNote(id: $id) {
      ...NoteExpandedFields
    }
  }

  \${NoteExpandedFragment}
\`
",
      "name": "getNote",
    },
    Object {
      "implementation": "export const findComments = gql\`
  query findComments($filter: CommentFilter, $page: PageRequest, $orderBy: OrderByInput) {
    findComments(filter: $filter, page: $page, orderBy: $orderBy) {
      items {
        ...CommentExpandedFields
      }
      offset
      limit
    }
  }

  \${CommentExpandedFragment}
\`
",
      "name": "findComments",
    },
    Object {
      "implementation": "export const getComment = gql\`
  query getComment($id: ID!) {
    getComment(id: $id) {
      ...CommentExpandedFields
    }
  }

  \${CommentExpandedFragment}
\`
",
      "name": "getComment",
    },
  ],
  "subscriptions": Array [
    Object {
      "implementation": "export const newNote = gql\`
  subscription newNote($filter: NoteSubscriptionFilter) {
  newNote(filter: $filter) {
      ...NoteFields
  }
} 

  \${NoteFragment}
\`
",
      "name": "newNote",
    },
    Object {
      "implementation": "export const updatedNote = gql\`
  subscription updatedNote($filter: NoteSubscriptionFilter) {
  updatedNote(filter: $filter) {
      ...NoteFields
  }
} 

  \${NoteFragment}
\`
",
      "name": "updatedNote",
    },
    Object {
      "implementation": "export const deletedNote = gql\`
  subscription deletedNote($filter: NoteSubscriptionFilter) {
  deletedNote(filter: $filter) {
      ...NoteFields
  }
} 

  \${NoteFragment}
\`
",
      "name": "deletedNote",
    },
    Object {
      "implementation": "export const newComment = gql\`
  subscription newComment($filter: CommentSubscriptionFilter) {
  newComment(filter: $filter) {
      ...CommentFields
  }
} 

  \${CommentFragment}
\`
",
      "name": "newComment",
    },
    Object {
      "implementation": "export const updatedComment = gql\`
  subscription updatedComment($filter: CommentSubscriptionFilter) {
  updatedComment(filter: $filter) {
      ...CommentFields
  }
} 

  \${CommentFragment}
\`
",
      "name": "updatedComment",
    },
    Object {
      "implementation": "export const deletedComment = gql\`
  subscription deletedComment($filter: CommentSubscriptionFilter) {
  deletedComment(filter: $filter) {
      ...CommentFields
  }
} 

  \${CommentFragment}
\`
",
      "name": "deletedComment",
    },
  ],
}
`;
